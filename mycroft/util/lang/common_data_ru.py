# -*- coding: utf-8 -*-
#
# Copyright 2019 Mycroft AI Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
from collections import OrderedDict, namedtuple

Numeral = namedtuple("Numeral", ["masculine", "feminine", "number"])

_NUM_STRING_RU = {
    0: Numeral('ноль', 'ноль', 0),
    1: Numeral('один', 'одна', 1),
    2: Numeral('два', 'две', 2),
    3: Numeral('три', 'три', 3),
    4: Numeral('четыре', 'четыре', 4),
    5: Numeral('пять', 'пять', 5),
    6: Numeral('шесть', 'шесть', 6),
    7: Numeral('семь', 'семь', 7),
    8: Numeral('восемь', 'восемь', 8),
    9: Numeral('девять', 'девять', 9),
    10: Numeral('десять', 'десять', 10),
    11: Numeral('одинадцать', 'одинадцать', 11),
    12: Numeral('двенадцать', 'двенадцать', 12),
    13: Numeral('тринадцать', 'тринадцать', 13),
    14: Numeral('четырнадцать', 'четырнадцать', 14),
    15: Numeral('пятнадцать', 'пятнадцать', 15),
    16: Numeral('шестнадцать', 'шестнадцать', 16),
    17: Numeral('семнадцать', 'семнадцать', 17),
    18: Numeral('восемнадцать', 'восемнадцать', 18),
    19: Numeral('девятнадцать', 'девятнадцать', 19),
    20: Numeral('двадцать', 'двадцать', 20),
    30: Numeral('тридцать', 'тридцать', 30),
    40: Numeral('сорок', 'сорок', 40),
    50: Numeral('пятьдесят', 'пятьдесят', 50),
    60: Numeral('шестьдесят', 'шестьдесят', 60),
    70: Numeral('семьдесят', 'семьдесят', 70),
    80: Numeral('восемьдесят', 'восемьдесят', 80),
    90: Numeral('девяносто', 'девяносто', 90),
    100: Numeral('сто', 'сто', 100),
    200: Numeral('двести', 'двести', 200),
    300: Numeral('триста', 'триста', 300),
    400: Numeral('четыреста', 'четыреста', 400),
    500: Numeral('пятьсот', 'пятьсот', 500),
    600: Numeral('шестьсот', 'шестьсот', 600),
    700: Numeral('семьсот', 'семьсот', 700),
    800: Numeral('восемьсот', 'восемьсот', 800),
    900: Numeral('девятьсот', 'девятьсот', 900)
}

Fraction = namedtuple("Fraction", ["singular", "plural"])

_FRACTION_STRING_RU = {
    1: Fraction('первая', 'первых'),
    2: Fraction('вторая', 'вторых'),
    3: Fraction('третья', 'третьих'),
    4: Fraction('четвертая', 'четвертых'),
    5: Fraction('пятая', 'пятых'),
    6: Fraction('шестая', 'шестых'),
    7: Fraction('седьмая', 'седьмых'),
    8: Fraction('восьмая', 'восьмых'),
    9: Fraction('девятая', 'девятых'),
    10: Fraction('десятая', 'десятых'),
    11: Fraction('одинадцатая', 'одинадцатых'),
    12: Fraction('двенадцатая', 'двенадцатых'),
    13: Fraction('тринадцатая', 'тринадцатых'),
    14: Fraction('четырнадцатая', 'четырнадцатых'),
    15: Fraction('пятнадцатая', 'пятнадцатых'),
    16: Fraction('шестнадцатая', 'шестнадцатых'),
    17: Fraction('семнадцатая', 'семнадцатых'),
    18: Fraction('восемнадцатая', 'восемнадцатых'),
    19: Fraction('девятнадцатая', 'девятнадцатых'),
    20: Fraction('двадцатая', 'двадцатых'),
    100: Fraction('сотая', 'сотых')
}

_LONG_SCALE_FRACTION_STRING_RU = {
    1000: Fraction('тысячаня', 'тысячных'),
    1000000: Fraction('миллионная', 'миллионных'),
    1e12: Fraction("биллионная", "биллионных"),
    1e18: Fraction('триллионная', 'триллионных'),
    1e24: Fraction("квадриллионная", "квадриллионных"),
    1e30: Fraction("квинтиллионная", "квинтиллионных"),
    1e36: Fraction("секстиллионная", "секстиллионных"),
    1e42: Fraction("септиллионная", "септиллионных"),
    1e48: Fraction("октиллионная", "октиллионных"),
    1e54: Fraction("нониллионная", "нониллионных"),
    1e60: Fraction("дециллионная", "дециллионных")
}

_SHORT_SCALE_FRACTION_STRING_RU = {
    1000: Fraction('тысячаная', 'тысячных'),
    1000000: Fraction('миллионная', 'миллионных'),
    1e9: Fraction("биллионная", "биллионных"),
    1e12: Fraction('триллионная', 'триллионных'),
    1e15: Fraction("квадриллионная", "квадриллионных"),
    1e18: Fraction("квинтиллионная", "квинтиллионных"),
    1e21: Fraction("секстиллионная", "секстиллионных"),
    1e24: Fraction("септиллионная", "септиллионных"),
    1e27: Fraction("октиллионная", "октиллионных"),
    1e30: Fraction("нониллионная", "нониллионных"),
    1e33: Fraction("дециллионная", "дециллионных"),
    1e36: Fraction("ундециллионная", "ундециллионных"),
    1e39: Fraction("дуодециллионная", "дуодециллионных"),
    1e42: Fraction("тредециллионная", "тредециллионных"),
    1e45: Fraction("кватродециллионная", "кватродециллионных"),
    1e48: Fraction("квинквадециллионная", "квинквадециллионных"),
    1e51: Fraction("седециллионная", "седециллионных"),
    1e54: Fraction("септендециллионная", "септендециллионных"),
    1e57: Fraction("октодециллионная", "октодециллионных"),
    1e60: Fraction("новендециллионная", "новендециллионных")
}

_SPECIAL_FRACTION_STRING_RU = {
    2: 'половина',
    3: 'треть',
    4: 'четверть'
}

BigNumeral = namedtuple("BigNumeral", ["nomn", "gen", "gen_plur", "number"])

_LONG_SCALE_RU = OrderedDict([
    (1000, BigNumeral('тысяча', 'тысячи', 'тысяч', 1000)),
    (1000000, BigNumeral('миллион', 'миллиона', 'миллионов', 1000000)),
    (1e12, BigNumeral("биллион", "биллиона", "биллионов", 1e12)),
    (1e18, BigNumeral('триллион', 'триллиона', 'триллионов', 1e18)),
    (1e24, BigNumeral("квадриллион", "квадриллиона", "квадриллионов", 1e24)),
    (1e30, BigNumeral("квинтиллион", "квинтиллиона", "квинтиллионов", 1e30)),
    (1e36, BigNumeral("секстиллион", "секстиллиона", "секстиллионов", 1e36)),
    (1e42, BigNumeral("септиллион", "септиллиона", "септиллионов", 1e42)),
    (1e48, BigNumeral("октиллион", "октиллиона", "октиллионов", 1e48)),
    (1e54, BigNumeral("нониллион", "нониллиона", "нониллионов", 1e54)),
    (1e60, BigNumeral("дециллион", "дециллиона", "дециллионов", 1e60)),
    (1e66, BigNumeral("ундециллион", "ундециллиона", "ундециллионов", 1e66)),
    (1e72, BigNumeral("деодециллион", "деодециллиона",
                      "деодециллионов", 1e72)),
    (1e78, BigNumeral("тредециллион", "тредециллиона",
                      "тредециллионов", 1e78)),
    (1e84, BigNumeral("квадродециллион", "квадродециллиона",
                      "квадродециллионов", 1e84)),
    (1e90, BigNumeral("квинтодециллион", "квинтодециллиона",
                      "квинтодециллионов", 1e90)),
    (1e96, BigNumeral("седециллион", "седециллиона", "седециллионов", 1e96)),
    (1e102, BigNumeral("септендециллион", "септендециллиона",
                       "септендециллионов", 1e102)),
    (1e108, BigNumeral("октодециллион", "октодециллиона",
                       "октодециллионов", 1e108)),
    (1e114, BigNumeral("новендесиллион", "новендесиллиона",
                       "новендесиллионов", 1e114)),
    (1e120, BigNumeral("вигинтиллион", "вигинтиллиона",
                       "вигинтиллионов", 1e120)),
    (1e306, BigNumeral("унквинквинквагинциллион", "унквинквинквагинциллиона",
                       "унквинквинквагинциллионов", 1e306)),
    (1e312, BigNumeral("дуоквинквинквагинциллион", "дуоквинквинквагинциллиона",
                       "дуоквинквинквагинциллионов", 1e312)),
    (1e336, BigNumeral("сесквинквинквагинциллион", "сесквинквинквагинциллиона",
                       "сесквинквинквагинциллионов", 1e336)),
    (1e366, BigNumeral("ансексагинтиллион", "ансексагинтиллиона",
                       "ансексагинтиллионов", 1e366))
])


_SHORT_SCALE_RU = OrderedDict([
    (1000, BigNumeral('тысяча', 'тысячи', 'тысяч', 1000)),
    (1000000, BigNumeral('миллион', 'миллиона', 'миллионов', 1000000)),
    (1e9, BigNumeral("биллион", "биллиона", "биллионов", 1e9)),
    (1e12, BigNumeral('триллион', 'триллиона', 'триллионов', 1e12)),
    (1e15, BigNumeral("квадриллион", "квадриллиона", "квадриллионов", 1e15)),
    (1e18, BigNumeral("квинтиллион", "квинтиллиона", "квинтиллионов", 1e18)),
    (1e21, BigNumeral("секстиллион", "секстиллиона", "секстиллионов", 1e21)),
    (1e24, BigNumeral("септиллион", "септиллиона", "септиллионов", 1e24)),
    (1e27, BigNumeral("октиллион", "октиллиона", "октиллионов", 1e27)),
    (1e30, BigNumeral("нониллион", "нониллиона", "нониллионов", 1e30)),
    (1e33, BigNumeral("дециллион", "дециллиона", "дециллионов", 1e33)),
    (1e36, BigNumeral("ундециллион", "ундециллиона", "ундециллионов", 1e36)),
    (1e39, BigNumeral("дуодециллион", "дуодециллиона",
                      "дуодециллионов", 1e39)),
    (1e42, BigNumeral("тредециллион", "тредециллиона",
                      "тредециллионов", 1e42)),
    (1e45, BigNumeral("кватродециллион", "кватродециллиона",
                      "кватродециллионов", 1e45)),
    (1e48, BigNumeral("квинквадециллион", "квинквадециллиона",
                      "квинквадециллионов", 1e48)),
    (1e51, BigNumeral("седециллион", "седециллиона",
                      "седециллионов", 1e51)),
    (1e54, BigNumeral("септендециллион", "септендециллиона",
                      "септендециллионов", 1e54)),
    (1e57, BigNumeral("октодециллион", "октодециллиона",
                      "октодециллионов", 1e57)),
    (1e60, BigNumeral("новендециллион", "новендециллиона",
                      "новендециллионов", 1e60)),
    (1e63, BigNumeral("вигинтиллион", "вигинтиллиона",
                      "вигинтиллионов", 1e63)),
    (1e66, BigNumeral("унвигинтиллион", "унвигинтиллиона",
                      "унвигинтиллионов", 1e66)),
    (1e69, BigNumeral("уновигинтиллион", "уновигинтиллиона",
                      "уновигинтиллионов", 1e69)),
    (1e72, BigNumeral("трезвигинтиллион", "трезвигинтиллиона",
                      "трезвигинтиллионов", 1e72)),
    (1e75, BigNumeral("кваттоурвигинтиллион", "кваттоурвигинтиллиона",
                      "кваттоурвигинтиллионов", 1e75)),
    (1e78, BigNumeral("квинквавигинтиллион", "квинквавигинтиллиона",
                      "квинквавигинтиллионов", 1e78)),
    (1e81, BigNumeral("квесвигинтиллион", "квесвигинтиллиона",
                      "квесвигинтиллионов", 1e81)),
    (1e84, BigNumeral("септемвигинтиллион", "септемвигинтиллиона",
                      "септемвигинтиллионов", 1e84)),
    (1e87, BigNumeral("октовигинтиллион", "октовигинтиллиона",
                      "октовигинтиллионов", 1e87)),
    (1e90, BigNumeral("новемвигинтиллион", "новемвигинтиллиона",
                      "новемвигинтиллионов", 1e90)),
    (1e93, BigNumeral("тригинтиллион", "тригинтиллиона",
                      "тригинтиллионов", 1e93)),
    (1e96, BigNumeral("унтригинтиллион", "унтригинтиллиона",
                      "унтригинтиллионов", 1e96)),
    (1e99, BigNumeral("дуотригинтиллион", "дуотригинтиллиона",
                      "дуотригинтиллионов", 1e99)),
    (1e102, BigNumeral("трестригинтиллион", "трестригинтиллиона",
                       "трестригинтиллионов", 1e102)),
    (1e105, BigNumeral("кваттротригиниллион", "кваттротригиниллиона",
                       "кваттротригиниллионов", 1e105)),
    (1e108, BigNumeral("квинкватригинтиллион", "квинкватригинтиллиона",
                       "квинкватригинтиллионов", 1e108)),
    (1e111, BigNumeral("сестригинтиллион", "сестригинтиллиона",
                       "сестригинтиллионов", 1e111)),
    (1e114, BigNumeral("септентригинтиллион", "септентригинтиллиона",
                       "септентригинтиллионов", 1e114)),
    (1e117, BigNumeral("октотригинтиллион", "октотригинтиллиона",
                       "октотригинтиллионов", 1e117)),
    (1e120, BigNumeral("новентригинтиллион", "новентригинтиллиона",
                       "новентригинтиллионов", 1e120)),
    (1e123, BigNumeral("квадрагинтиллион", "квадрагинтиллиона",
                       "квадрагинтиллионов", 1e123)),
    (1e153, BigNumeral("квинквагинтиллион", "квинквагинтиллиона",
                       "квинквагинтиллионов", 1e153)),
    (1e183, BigNumeral("сексагинтиллион", "сексагинтиллиона",
                       "сексагинтиллионов", 1e183)),
    (1e213, BigNumeral("септуагинтиллион", "септуагинтиллиона",
                       "септуагинтиллионов", 1e213)),
    (1e243, BigNumeral("октагинтиллион", "октагинтиллиона",
                       "октагинтиллионов", 1e243)),
    (1e273, BigNumeral("нонагинтиллион", "нонагинтиллиона",
                       "нонагинтиллионов", 1e273)),
    (1e303, BigNumeral("центиллион", "центиллиона",
                       "центиллионов", 1e303)),
    (1e306, BigNumeral("унцентиллион", "унцентиллиона",
                       "унцентиллионов", 1e306)),
    (1e309, BigNumeral("дуоцентиллион", "дуоцентиллиона",
                       "дуоцентиллионов", 1e309)),
    (1e312, BigNumeral("тресцентиллион", "тресцентиллиона",
                       "тресцентиллионов", 1e312)),
    (1e333, BigNumeral("децицентиллион", "децицентиллиона",
                       "децицентиллионов", 1e333)),
    (1e336, BigNumeral("ундецицентиллион", "ундецицентиллиона",
                       "ундецицентиллионов", 1e336)),
    (1e363, BigNumeral("вигинтицентилилон", "вигинтицентилилона",
                       "вигинтицентилилонов", 1e363)),
    (1e366, BigNumeral("унвигинтицентиллион", "унвигинтицентиллиона",
                       "унвигинтицентиллионов", 1e366)),
    (1e393, BigNumeral("тригинтацентиллион", "тригинтацентиллиона",
                       "тригинтацентиллионов", 1e393)),
    (1e423, BigNumeral("квадрагинтацентиллион", "квадрагинтацентиллиона",
                       "квадрагинтацентиллионов", 1e423)),
    (1e453, BigNumeral("квинквагинтацентиллион", "квинквагинтацентиллиона",
                       "квинквагинтацентиллионов", 1e453)),
    (1e483, BigNumeral("сексагинтацентилллион", "сексагинтацентилллиона",
                       "сексагинтацентилллионов", 1e483)),
    (1e513, BigNumeral("септуагинтацентиллион", "септуагинтацентиллиона",
                       "септуагинтацентиллионов", 1e513)),
    (1e543, BigNumeral("октогинтацентиллион", "октогинтацентиллиона",
                       "октогинтацентиллионов", 1e543)),
    (1e573, BigNumeral("нонагинтацентиллион", "нонагинтацентиллиона",
                       "нонагинтацентиллионов", 1e573)),
    (1e603, BigNumeral("дуцентиллион", "дуцентиллиона",
                       "дуцентиллионов", 1e603)),
    (1e903, BigNumeral("трецентиллион", "трецентиллиона",
                       "трецентиллионов", 1e903)),
    (1e1203, BigNumeral("квадрингентиллион", "квадрингентиллиона",
                        "квадрингентиллионов", 1e1203)),
    (1e1503, BigNumeral("квингентиллион", "квингентиллиона",
                        "квингентиллионов", 1e1503)),
    (1e1803, BigNumeral("сесцентиллион", "сесцентиллиона",
                        "сесцентиллионов", 1e1803)),
    (1e2103, BigNumeral("септингентиллион", "септингентиллиона",
                        "септингентиллионов", 1e2103)),
    (1e2403, BigNumeral("октингептиллион", "октингептиллиона",
                        "октингептиллионов", 1e2403)),
    (1e2703, BigNumeral("нонгентиллион", "нонгентиллиона",
                        "нонгентиллионов", 1e2703)),
    (1e3003, BigNumeral("миллиниллион", "миллиниллиона",
                        "миллиниллионов", 1e3003))
])

Noun = namedtuple("Noun", ["nomn", "gen", "gen_plur"])

_HOUR = Noun("час", "часа", "часов")
_MIN = Noun("минута", "минуты", "минут")
_SEC = Noun("секунда", "секунды", "секунд")

_ORDINAL_STRING_BASE_EN = {
    1: 'first',
    2: 'second',
    3: 'third',
    4: 'fourth',
    5: 'fifth',
    6: 'sixth',
    7: 'seventh',
    8: 'eighth',
    9: 'ninth',
    10: 'tenth',
    11: 'eleventh',
    12: 'twelfth',
    13: 'thirteenth',
    14: 'fourteenth',
    15: 'fifteenth',
    16: 'sixteenth',
    17: 'seventeenth',
    18: 'eighteenth',
    19: 'nineteenth',
    20: 'twentieth',
    30: 'thirtieth',
    40: "fortieth",
    50: "fiftieth",
    60: "sixtieth",
    70: "seventieth",
    80: "eightieth",
    90: "ninetieth",
    10e3: "hundredth",
    1e3: "thousandth"
}


_SHORT_ORDINAL_STRING_EN = {
    1e6: "millionth",
    1e9: "billionth",
    1e12: "trillionth",
    1e15: "quadrillionth",
    1e18: "quintillionth",
    1e21: "sextillionth",
    1e24: "septillionth",
    1e27: "octillionth",
    1e30: "nonillionth",
    1e33: "decillionth"
    # TODO > 1e-33
}
_SHORT_ORDINAL_STRING_EN.update(_ORDINAL_STRING_BASE_EN)


_LONG_ORDINAL_STRING_EN = {
    1e6: "millionth",
    1e12: "billionth",
    1e18: "trillionth",
    1e24: "quadrillionth",
    1e30: "quintillionth",
    1e36: "sextillionth",
    1e42: "septillionth",
    1e48: "octillionth",
    1e54: "nonillionth",
    1e60: "decillionth"
    # TODO > 1e60
}
_LONG_ORDINAL_STRING_EN.update(_ORDINAL_STRING_BASE_EN)

_SPECIAL_TIME_RU = {
    1: 'второго',
    2: 'третьего',
    3: 'четвёртого',
    4: 'пятого',
    5: 'шестого',
    6: 'седьмого',
    7: 'восьмого',
    8: 'девятого',
    9: 'десятого',
    10: 'одинадцатого',
    11: 'двенадцатого',
    12: 'первого'
}

_SPECIAL_MIN_RU = {
    45: "без пятнадцати",
    50: "без десяти",
    55: "без пяти"
}
